{{- if .Values.scim.credentials.secrets.enabled }}
{{- if and (.Values.scim.credentials.secrets.create) }}
{{ $secrets := "" }}
{{- if (eq .Values.scim.credentials.secrets.kind "Secret") }}
{{- $secrets := pick .Values.scim.credentials.secrets "scimsession" "workspaceSettings" "workspaceCredentials" }}
  {{- range $secret := $secrets }}
    {{- if not (or (hasKey $secret "value_json") (hasKey $secret "value_base64")) }}
      {{- fail "If create is set one of either value_json or value_base64 is required for each secret" }}
    {{- end }}

    {{- if or $secret.value_json $secret.value_base64 }}
      {{- if and $secret.value_json $secret.value_base64 }}
        {{- fail "Only one of {{ $secret }}.value_json and {{ $secret }}.value_base64 can be specified" }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
kind: {{ .Values.scim.credentials.secrets.kind }}
metadata:
  name: "{{ include "op-scim-bridge.secretName" . }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/application: {{ template "common.names.fullname" . }}
    {{- with .Values.scim.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.scim.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- if eq .Values.scim.credentials.secrets.kind "Secret" }}
apiVersion: v1
type: Opaque
stringData:
  {{- range $secret := $secrets }}
  {{ $secret.key }}: |-
  {{ if $secret.value_json }}
  {{- $secret.value_json | b64enc | indent 2 }}
  {{ else }}
  {{- $secret.value_base64 | indent 2 }}
  {{ end }}
  {{- end }}
{{- else if eq .Values.scim.credentials.secrets.kind "SecretProviderClass" }}
apiVersion: secrets-store.csi.x-k8s.io/v1
spec:
  provider: {{ .Values.scim.credentials.secrets.secretProvider.name }}
  parameters:
    {{- with .Values.scim.credentials.secrets.secretProvider.parameters }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
